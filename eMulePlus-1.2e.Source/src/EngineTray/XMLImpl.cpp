#include "stdafx.h"
#include "EmEngine.h"
#include "../Engine/Sockets/TasksSockets.h"
#include "../Engine/XML/XML.h"

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(connect)
XML_RESULT_EMPTY(connect)
XML_EVENT_EMPTY(connect)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(disconnect)
XML_RESULT_EMPTY(disconnect)
XML_EVENT_EMPTY(disconnect)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class CTask_OnXmlDisconnected : public CTcpCompletionTask
{
public:
	virtual LPCTSTR TaskName(){ return _T("OnXmlDisconnected"); }
	virtual void SetClient(CEmClient*){ }
	virtual bool Process()
	{
		g_stEngine.SetXmlState(XML_DISCONNECTED);
		return true;
	}
};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(hello)
XML_EVENT_EMPTY(hello)

XML_RESULT_FUNC(hello)
{
	g_stEngine.m_pXmlClient = m_pClient;
	g_stEngine.SetXmlState(XML_CONNECTED);
	m_pClient->m_pOnCompletionTask = new CTask_OnXmlDisconnected;

	return true;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(quit)
XML_EVENT_EMPTY(quit)

XML_RESULT_FUNC(quit)
{
	g_stEngine.SetXmlState(XML_DISCONNECTED);
	return true;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(get_logs)
XML_EVENT_EMPTY(get_logs)

XML_RESULT_FUNC(get_logs)
{
	g_stEngine.m_XmlEvents.SetXmlResponse(m_ulId, m_sContents);
	return true;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(get_shared)
XML_EVENT_EMPTY(get_shared)

XML_RESULT_FUNC(get_shared)
{
	g_stEngine.m_XmlEvents.SetXmlResponse(m_ulId, m_sContents);
	return true;
}

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(set_param)
XML_RESULT_EMPTY(set_param)
XML_EVENT_EMPTY(set_param)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(server_connected)
XML_RESULT_EMPTY(server_connected)
XML_EVENT_EMPTY(server_connected)

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
XML_PROCESS_EMPTY(server_disconnected)
XML_RESULT_EMPTY(server_disconnected)
XML_EVENT_EMPTY(server_disconnected)
